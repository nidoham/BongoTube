# Gradle ডেমন প্রসেসের জন্য সর্বোচ্চ হিপ সাইজ নির্ধারণ করে (4 GB)
org.gradle.jvmargs=-Xmx4096m

# Gradle-কে সমান্তরালভাবে টাস্ক চালানোর অনুমতি দেয় (শুধুমাত্র decoupled প্রজেক্টের জন্য)
org.gradle.parallel=true

# AndroidX সাপোর্ট চালু করে (আধুনিক অ্যান্ড্রয়েড ডেভেলপমেন্টের জন্য আবশ্যক)
android.useAndroidX=true

# থার্ড-পার্টি লাইব্রেরিগুলোকে স্বয়ংক্রিয়ভাবে AndroidX-এ মাইগ্রেট করে
android.enableJetifier=true

# মেমোরি ব্যবহার কমাতে ব্যাকগ্রাউন্ডে AAPT2 ডেমন হিসেবে চালানো বন্ধ করে
android.enableAapt2.daemon=false


# ----- সমাধান ১: সব ওয়ার্নিং দেখুন -----
# Gradle-এর সব ওয়ার্নিং দেখাবে। সমস্যা লুকিয়ে রাখার চেয়ে সেগুলো দেখা ভালো।
# আপনার আগের সেটিং ছিল 'none', যা সব ওয়ার্নিং বন্ধ করে রাখত।
org.gradle.warning.mode=all


# ----- সমাধান ২: বিল্ড ক্যাশ চালু করুন -----
# বিল্ড ক্যাশ (Build Cache) চালু করবে। GitHub Actions-এ দ্রুত বিল্ডের জন্য এটি খুবই জরুরি।
# আপনার আগের সেটিং ছিল 'false', যা বিল্ডকে অনেক ধীর করে দিচ্ছিল।
org.gradle.caching=true


# Gradle-এর কনফিগারেশন ধাপ দ্রুত করার জন্য কনফিগারেশন ক্যাশ চালু করে
org.gradle.configuration-cache=true

# ভালো পারফরম্যান্সের জন্য বিল্ডের মাঝে Gradle ডেমনকে চালু রাখে
org.gradle.daemon=true

# সম্পূর্ণ প্রজেক্ট কনফিগারেশন নিশ্চিত করতে configure-on-demand বন্ধ রাখে
org.gradle.configureondemand=false

# দ্রুত বিল্ডের জন্য R8-এর ফুল অপটিমাইজেশন মোড বন্ধ রাখে
android.enableR8.fullMode=false

# ফরম্যাটিং টুল ব্যবহার করার সময় অফিসিয়াল কোটলিন কোডিং স্টাইল প্রয়োগ করে
kotlin.code.style=official

# নন-ট্রানজিটিভ R ক্লাস তৈরি করে বিল্ড পারফরম্যান্স উন্নত করে
android.nonTransitiveRClass=true

# Android Studio-এর লগ সেন্ডার নিষ্ক্রিয় করে (AIDE/Termux-এ রিসোর্স বাঁচায়)
android.injected.logSender.enable=false


# ----- সমাধান ৩: মূল সমস্যা এবং তার সমাধান -----
# এই লাইনটি শুধুমাত্র আপনার মোবাইলের AndroidIDE অ্যাপের জন্য ছিল।
# এটি বিল্ডকে এমন একটি টুল ব্যবহার করতে বাধ্য করছিল যা GitHub সার্ভারে নেই।
# এটিকে কমেন্ট আউট করার ফলে আপনার বিল্ড ফেইল হওয়ার মূল সমস্যাটি সমাধান হয়ে যাবে।
# android.aapt2FromMavenOverride=/data/user/0/com.itsaky.androidide/files/home/.androidide/aapt2